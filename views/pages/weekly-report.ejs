<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head'); %>
</head>
<body>

<div class="container-fluid">
    <%- include('../partials/header'); %>
    <div class="row">
        <div class="col">
            <table class="table table-dark table-striped table-bordered">
                <tr>
                    <th scope="row">Metric:</th>
                    <td><%=metric%></td>
                </tr>
                <tr>
                    <th scope="row">Links:</th>
                    <td>
                        <ul>
                            <%for (link of reportLinks) {%>
                            <li><a href="<%=link%>"><%=link%></a></li>
                            <%}%>
                        </ul>
                    </td>
                </tr>
            </table>

        </div>
    </div>
    <div class="row">
        <div class="col px-md-5">
            <div class="alert alert-info" role="alert">
                <form id="metricForm">
                    Showing <select id="pageMetric" name="pageMetric">
                        <option selected value="TRASH">TRASH</option>
                        <option value="BOSS">BOSS</option>
                    </select>
                    Classes <select id="classFilter" name="classFilter">
                        <option value="ALL" selected>ALL</option>
                        <% classes.forEach(function(value, key) { %>
                        <option value="<%=value %>"><%=value %></option>
                        <% }); %>
                    </select>
                </form>
            </div>
            <canvas id="myChart"></canvas>
            <div id="toolbar2" class="select">
                <select class="form-control">
                    <option value="">Export Basic</option>
                    <option value="all">Export All</option>
                    <option value="selected">Export Selected</option>
                </select>
            </div>
            <table id="table2" data-show-export="true" data-click-to-select="true" data-toolbar="#toolbar2"
                   data-show-toggle="true" data-show-columns="true"
                   data-filter-control="true"
                   class="table table-bordered table-hover table-dark table-striped table-responsive ">

                <thead class="">
                    <tr>
                        <th style="" data-field="name" data-filter-control="input" data-sortable="true">
                            <div class="th-inner ">Name</div>
                        </th>
                        <th style="" data-field="className" data-filter-control="select" data-sortable="true">
                            <div class="th-inner ">Class</div>
                        </th>
                        <%for (week of logWeeks) {%>
                        <th style="" data-field="wk<%=week%>EncounterDps" data-sortable="true">
                            <div class="th-inner ">Week <%=week%> Boss</div>
                        </th>
                        <th style="" data-field="wk<%=week%>TrashDps" data-sortable="true">
                            <div class="th-inner ">Week <%=week%> Trash</div>
                        </th>
                        <%}%>
                    </tr>
                </thead>
                <tbody>
                <%for (entry of analyzedData) {%>
                <tr>
                    <td><%=entry.name%></td>
                    <td><%=entry.className%></td>
                    <%for (week of logWeeks) {%>
                    <td><%=entry.encounterMap.get(week)%></td>
                    <td><%=entry.trashMap.get(week)%></td>
                    <%}%>
                </tr>
                <%}%>
                </tbody>
            </table>
        </div>
    </div>
</div>
    <script>
        var $table2 = $('#table2')
        var myChart;

        function prepData(rawData) {
            let resultData = []
            let indx = 0
            for (let dataEntry of rawData) {
                if ($('#classFilter').val() == 'ALL' || $('#classFilter').val() == dataEntry.className  ) {
                    let clor = colors[indx]
                    indx++
                    let dataMap = dataEntry.trashMap
                    if ($('#pageMetric').val() == 'BOSS') dataMap = dataEntry.encounterMap
                    if (indx > 31) {
                        clor = '#' + Math.floor(Math.random()*16777215).toString(16);
                    }
                    let trashSet = []
                    let charName = dataEntry.name
                    let charClass = dataEntry.className
                    for (let trashEntry of dataMap.value) {
                        let week = trashEntry[0]
                        let val = trashEntry[1]
                        trashSet.push({x: week, y: val})
                    }
                    const sortedEntry = {
                        label: charName,
                        data: trashSet,
                        backgroundColor: clor,
                        borderColor: clor,
                        tension: 0.2,
                        spanGaps: false
                    }
                    resultData.push(sortedEntry)
                }
            }
            return resultData
        }

        function buildGraph(graphData) {
            console.log(graphData)
            if (myChart != null) myChart.destroy();
            var chartTitle = $('#classFilter').val() + ': ' + $('#pageMetric').val()
            var ctx = document.getElementById('myChart').getContext('2d');
            myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets:  graphData
                },
                options: {
                    plugins: {
                        legend: {
                            display: true,
                            position: 'left',
                            align: 'start',
                            title: chartTitle,
                            labels: {
                                color: 'rgb(236, 236, 236)'
                            }
                        }
                    }
                }
            });
        }

        $(function () {
            $('#toolbar2').find('select').change(function () {
                    $table2.bootstrapTable({
                        exportDataType: $(this).val(),
                        exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel', 'pdf'],
                    })
                }).trigger('change')
        })

        $(function () {
            let graphData = prepData(mydata2)
            buildGraph(graphData);
        })

        $('#pageMetric').change(function () {
            let graphData = prepData(mydata2)
            buildGraph(graphData);
        });

        $('#classFilter').change(function () {
            let graphData = prepData(mydata2)
            buildGraph(graphData);
        });

        <%
        function replacer(key, value) {
            if(value instanceof Map) {
                return {
                    dataType: 'Map',
                    value: Array.from(value.entries()), // or with spread: value: [...value]
                };
            } else {
                return value;
            }
        }
        %>
        var mydata2 = <%- JSON.stringify(analyzedData, replacer) %>
        var labels = <%- JSON.stringify(logWeeks) %>
        var colors = ["#3366cc","#dc3912","#ff9900","#109618","#990099","#0099c6","#dd4477","#66aa00","#b82e2e","#316395","#3366cc","#994499","#22aa99","#aaaa11","#6633cc","#e67300","#8b0707","#651067","#329262","#5574a6","#3b3eac","#b77322","#16d620","#b91383","#f4359e","#9c5935","#a9c413","#2a778d","#668d1c","#bea413","#0c5922","#743411"]
    </script>

<%- include('../partials/footer'); %>
</body>
</html>